{
    "componentChunkName": "component---src-templates-smell-article-template-tsx",
    "path": "/obscured-intent",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"obscured-intent\" style=\"position:relative;\"><a href=\"#obscured-intent\" aria-label=\"obscured intent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Obscured Intent</h2>\n<p>The <a href=\"/smells/obscured-intent\">Obscured Intent</a> Code Smell, initially proposed by Robert Martin in <em>\"Clean Code\"</em> [<a href=\"#sources\">37</a>]), is cross-smelly with other smells in the <strong>Obfuscators</strong> category. When <a href=\"/smells/uncommunicative-name\">Uncommunicative Names</a>/<a href=\"/smells/magic-number\">Numbers</a> are placed within a <a href=\"/smells/vertical-separation\">Vertically Separated Space</a> hiding an <a href=\"/smells/imperative-loops\">Imperative Loop</a> with a <a href=\"/smells/what-comment\">\"What\" Comment</a> explanation on top of that, then the <a href=\"/smells/obscured-intent\">Obscured Intent</a> is going to be caught quite easily by intuition or by metrics of other smells.</p>\n<p>The code should be as expressive as possible [<a href=\"#sources\">1</a>]). Robert Martin gives an example of an utterly unreadable <a href=\"#Obscured-Intent\">overtime function</a> noting that even if the code is small and compact, it may still be tragic. In this case, correcting the <a href=\"/smells/uncommunicative-name\">Uncommunicative Names</a>/<a href=\"/smells/magic-number\">Numbers</a> would probably do the trick to make that snippet of code much more fragrant.</p>\n<p>There is a famous real-world example of an Obscured Intent. In the <em>Quake 3: Arena</em> <a href=\"#example-1\">fast inverse square root</a>, the problem is with the <a href=\"/smells/uncommunicative-name\">Uncommunicative Naming</a>, <a href=\"/smells/what-comment\">\"What\" Comments</a>, <a href=\"/smells/dead-code\">Dead Code</a>, and <a href=\"/smells/magic-number\">Magic Numbers</a>. I will also point out that games have a slightly different specificity for their industry. Usually, the code out there is very confusing, and priorities are not put on things such as reusability, so there is a lot to explore.</p>\n<h3 id=\"causation\" style=\"position:relative;\"><a href=\"#causation\" aria-label=\"causation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Causation</h3>\n<p>Sometimes, a developer can forget that something that seems evident to him is not as clear to other developers. There may also be cases where the developer intentionally compacts the code to appear brighter by making it more mysterious.</p>\n<h3 id=\"problems\" style=\"position:relative;\"><a href=\"#problems\" aria-label=\"problems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problems</h3>\n<h4 id=\"comprehensibility-issues\" style=\"position:relative;\"><a href=\"#comprehensibility-issues\" aria-label=\"comprehensibility issues permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Comprehensibility Issues</strong></h4>\n<p>Code does not convey meaning and thus is not understandable. It may be a considerable time waste if someone ever has to touch parts of the code that interact with an <em>obscure intent</em> piece of code.</p>\n<h3 id=\"example\" style=\"position:relative;\"><a href=\"#example\" aria-label=\"example permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example</h3>\n<div class=\"example-block\">\n<h4 id=\"smelly\" style=\"position:relative;\"><a href=\"#smelly\" aria-label=\"smelly permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Smelly</h4>\n<p>An example given by Robert Martin.</p>\n<div class=\"gatsby-highlight\" data-language=\"py\"><pre class=\"language-py\"><code class=\"language-py\"><span class=\"token keyword\">def</span> <span class=\"token function\">m_ot_calc</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">></span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">return</span> i_ths_wkd <span class=\"token operator\">*</span> i_ths_rte \\\n        <span class=\"token operator\">+</span> <span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span> <span class=\"token operator\">*</span> i_ths_rte <span class=\"token operator\">*</span>\n        <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> i_ths_wkd <span class=\"token operator\">-</span> <span class=\"token number\">400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n</div>\n<div class=\"example-block\">\n<h4 id=\"smelly-1\" style=\"position:relative;\"><a href=\"#smelly-1\" aria-label=\"smelly 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Smelly</h4>\n<p>Quake 3 Arena Fast Inverse Square Root</p>\n<div class=\"gatsby-highlight\" data-language=\"c++\"><pre class=\"language-c++\"><code class=\"language-c++\">float Q_rsqrt( float number )\n{\n        long i;\n        float x2, y;\n        const float threehalfs = 1.5F;\n\n        x2 = number * 0.5F;\n        y  = number;\n        i  = * ( long * ) &amp;y;                       // evil floating point bit level hacking\n        i  = 0x5f3759df - ( i &gt;&gt; 1 );               // what the f*ck?\n        y  = * ( float * ) &amp;i;\n        y  = y * ( threehalfs - ( x2 * y * y ) );   // 1st iteration\n//      y  = y * ( threehalfs - ( x2 * y * y ) );   // 2nd iteration, this can be removed\n\n        return y;\n}</code></pre></div>\n</div>\n<h3 id=\"refactoring\" style=\"position:relative;\"><a href=\"#refactoring\" aria-label=\"refactoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refactoring</h3>\n<ul>\n<li>Remove the code smells that cause <em>Obscure Intent</em></li>\n</ul>\n<hr>\n<h5 id=\"sources\" style=\"position:relative;\"><a href=\"#sources\" aria-label=\"sources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sources</h5>\n<ul>\n<li>[<a href=\"#sources\">1</a>], [Origin] - Robert C. Martin, <em>\"Clean Code: A Handbook of Agile Software Craftsmanship\"</em> (2008)</li>\n</ul>","excerpt":"Obscured Intent The Obscured Intent Code Smell, initially proposed by Robert Martin in \"Clean Code\" [37]), is cross-smelly with other smells…","timeToRead":2,"fields":{"slug":"/obscured-intent"},"frontmatter":{"meta":{"last_update_date":"April 19, 2022","title":"Obscured Intent","cover":"/logos/logo-text-2560x1280.png","known_as":["---"]},"categories":{"obstruction":["Obfuscators"],"expanse":"Between","occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]},"relations":{"related_smells":[{"name":"Clever Code","slug":"clever-code","type":["family"]},{"name":"Uncommunicative Name","slug":"uncommunicative-name","type":["caused"]},{"name":"Magic Number","slug":"magic-number","type":["caused"]},{"name":"Region","slug":"region","type":["caused"]},{"name":"Loops","slug":"imperative-loops","type":["caused"]},{"name":"Complicated Boolean Expression","slug":"complicated-boolean-expression","type":["caused"]},{"name":"Primitive Obsession","slug":"primitive-obsession","type":["caused"]},{"name":"Vertical Separation","slug":"vertical-separation","type":["caused"]},{"name":"\"What\" Comments","slug":"what-comments","type":["causes"]}]},"history":[{"author":"Robert C. Martin","type":"origin","named_as":["Obscured Intent"],"regarded_as":["Code Smell"],"source":{"year":2008,"authors":["Robert C. Martin"],"name":"Clean Code: A Handbook of Agile Software Craftsmanship","type":"book"}}]}}},"pageContext":{"slug":"/obscured-intent","title":"Obscured Intent","bottomNavigation":{"next":{"title":"Oddball Solution","slug":"/oddball-solution"},"previous":{"title":"Null Check","slug":"/null-check"}},"navbarItems":[{"title":"Clever Code","slug":"/clever-code","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Duplicated Code","slug":"/duplicated-code","categories":{"expanse":"Within","obstruction":["Dispensables"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Fallacious Comment","slug":"/fallacious-comment","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Linguistic Antipattern"],"tags":["---"]}},{"title":"Fallacious Method Name","slug":"/fallacious-method-name","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell","Linguistic Antipattern"],"tags":["---"]}},{"title":"Afraid To Fail","slug":"/afraid-to-fail","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Alternative Classes with Different Interfaces","slug":"/alternative-classes-with-different-interfaces","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Base Class depends on Subclass","slug":"/base-class-depends-on-subclass","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Binary Operator in Name","slug":"/binary-operator-in-name","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Linguistic Smell"],"tags":["---"]}},{"title":"Boolean Blindness","slug":"/boolean-blindness","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Callback Hell","slug":"/callback-hell","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Combinatorial Explosion","slug":"/combinatorial-explosion","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Complicated Boolean Expression","slug":"/complicated-boolean-expression","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Complicated Regex Expression","slug":"/complicated-regex-expression","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Conditional Complexity","slug":"/conditional-complexity","categories":{"expanse":"Within","obstruction":["Object Oriented Abusers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Data Clump","slug":"/data-clump","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Dead Code","slug":"/dead-code","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Divergent Change","slug":"/divergent-change","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Dubious Abstraction","slug":"/dubious-abstraction","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Fate over Action","slug":"/fate-over-action","categories":{"expanse":"Between","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Feature Envy","slug":"/feature-envy","categories":{"expanse":"Between","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Flag Argument","slug":"/flag-argument","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Global Data","slug":"/global-data","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Hidden Dependencies","slug":"/hidden-dependencies","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Imperative Loops","slug":"/imperative-loops","categories":{"expanse":"Within","obstruction":["Functional Abusers"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inappropriate Static","slug":"/inappropriate-static","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Incomplete Library Class","slug":"/incomplete-library-class","categories":{"expanse":"Between","obstruction":["Other"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inconsistent Names","slug":"/inconsistent-names","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inconsistent Style","slug":"/inconsistent-style","categories":{"expanse":"Between","obstruction":["Obfuscators"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Indecent Exposure","slug":"/indecent-exposure","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Insider Trading","slug":"/insider-trading","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Large Class","slug":"/large-class","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Architecture Smell","Code Smell","Design Smell"],"tags":["Unknown"]}},{"title":"Lazy Element","slug":"/lazy-element","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Long Method","slug":"/long-method","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Long Parameter List","slug":"/long-parameter-list","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Magic Number","slug":"/magic-number","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Antipattern","Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Message Chain","slug":"/message-chain","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Message Calls"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Middle Man","slug":"/middle-man","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Message Calls"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Mutable Data","slug":"/mutable-data","categories":{"expanse":"Between","obstruction":["Functional Abusers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Null Check","slug":"/null-check","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["Unknown"]}},{"title":"Obscured Intent","slug":"/obscured-intent","categories":{"expanse":"Between","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Oddball Solution","slug":"/oddball-solution","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Parallel Inheritance Hierarchies","slug":"/parallel-inheritance-hierarchies","categories":{"expanse":"Between","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Primitive Obsession","slug":"/primitive-obsession","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Refused Bequest","slug":"/refused-bequest","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Required Setup or Teardown Code","slug":"/required-setup-or-teardown-code","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Shotgun Surgery","slug":"/shotgun-surgery","categories":{"expanse":"Between","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Side Effects","slug":"/side-effects","categories":{"expanse":"Within","obstruction":["Functional Abusers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Special Case","slug":"/special-case","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Speculative Generality","slug":"/speculative-generality","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Status Variable","slug":"/status-variable","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Temporary Field","slug":"/temporary-field","categories":{"expanse":"Within","obstruction":["Object Oriented Abusers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Tramp Data","slug":"/tramp-data","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Type Embedded in Name","slug":"/type-embedded-in-name","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell","Linguistic Smell"],"tags":["---"]}},{"title":"Uncommunicative Name","slug":"/uncommunicative-name","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Vertical Separation","slug":"/vertical-separation","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Measured Smells"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"\"What\" Comment","slug":"/what-comment","categories":{"expanse":"Within","obstruction":["Dispensables"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}}]}},
    "staticQueryHashes": []}