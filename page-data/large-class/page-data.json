{
    "componentChunkName": "component---src-templates-smell-article-template-tsx",
    "path": "/large-class",
    "result": {"data":{"markdownRemark":{"html":"<h2 id=\"large-class\" style=\"position:relative;\"><a href=\"#large-class\" aria-label=\"large class permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Large Class</h2>\n<p>When one combines the smell of <a href=\"/smells/long-method\">Long Method</a> and <a href=\"/smells/long-parameter-list\">Long Parameter List</a>, but on a higher abstraction level, then he would get the <em>Large Class</em> code smell. Many long-form methods and an abundant number of parameters that can be passed to a class cause Large Class problems. The point is that the class has too many responsibilities and is doing too much.</p>\n<h3 id=\"causation\" style=\"position:relative;\"><a href=\"#causation\" aria-label=\"causation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Causation</h3>\n<p>This problem occurs because, under time constraints, it is much easier to place a new code in an existing class than to create a whole new class for the feature.</p>\n<h3 id=\"problems\" style=\"position:relative;\"><a href=\"#problems\" aria-label=\"problems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Problems</h3>\n<h4 id=\"hard-to-read-and-understand\" style=\"position:relative;\"><a href=\"#hard-to-read-and-understand\" aria-label=\"hard to read and understand permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Hard to Read and Understand</strong></h4>\n<p>Large components are hard to comprehend, which amplifies if the element is not purely functional and stateless.</p>\n<h4 id=\"hard-to-change\" style=\"position:relative;\"><a href=\"#hard-to-change\" aria-label=\"hard to change permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Hard to Change</strong></h4>\n<p>It is tough to assess where the change has to be made, and even after it is done, the developer has to verify whether that was the only one in the class that had to be changed to implement his new desired functionality. There is also the risk of breaking the functionalities of all the other responsibilities that the class has and breaking by making unexpected side effects.</p>\n<h4 id=\"hard-to-test\" style=\"position:relative;\"><a href=\"#hard-to-test\" aria-label=\"hard to test permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>Hard to Test</strong></h4>\n<p>The larger the class, the more potential scenarios (all the methods and state variations) have to be covered via tests.</p>\n<h3 id=\"refactoring\" style=\"position:relative;\"><a href=\"#refactoring\" aria-label=\"refactoring permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Refactoring:</h3>\n<ul>\n<li>Extract Class</li>\n<li>Extract Subclass</li>\n<li>Extract Interface</li>\n<li>Extract Domain Object</li>\n<li>Replace Data Value with Object</li>\n</ul>\n<hr>\n<h5 id=\"sources\" style=\"position:relative;\"><a href=\"#sources\" aria-label=\"sources permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sources</h5>\n<ul>\n<li>[Origin] - Martin Fowler, <em>\"Refactoring: Improving the Design of Existing Code\"</em> (1999)</li>\n</ul>","excerpt":"Large Class When one combines the smell of Long Method and Long Parameter List, but on a higher abstraction level, then he would get theâ€¦","timeToRead":1,"fields":{"slug":"/large-class"},"frontmatter":{"meta":{"last_update_date":"April 19, 2022","title":"Large Class","cover":"/logos/logo-text-2560x1280.png","known_as":["Blob","Brain Class","Complex Class","God Class","God Object","Schizophrenic Class","Ice Berg Class"]},"categories":{"obstruction":["Bloaters"],"expanse":"Within","occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Architecture Smell","Code Smell","Design Smell"],"tags":["Unknown"]},"relations":{"related_smells":[{"name":"Dubious Abstraction","slug":"dubious-abstraction","type":["co-exist"]},{"name":"Long Method","slug":"long-method","type":["caused"]},{"name":"Long Parameter List","slug":"long-parameter-list","type":["caused"]},{"name":"Temporary Field","slug":"temporary-field","type":["caused"]}]},"history":[{"author":"Martin Fowler","type":"origin","named_as":["Large Class"],"regarded_as":["Code Smell"],"source":{"year":1999,"authors":["Martin Fowler","Kent Beck (contributor)","Don Roberts (contributor)"],"name":"Refactoring: Improving the Design of Existing Code","type":"book"}}]}}},"pageContext":{"slug":"/large-class","title":"Large Class","bottomNavigation":{"next":{"title":"Lazy Element","slug":"/lazy-element"},"previous":{"title":"Insider Trading","slug":"/insider-trading"}},"navbarItems":[{"title":"Clever Code","slug":"/clever-code","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Duplicated Code","slug":"/duplicated-code","categories":{"expanse":"Within","obstruction":["Dispensables"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Fallacious Comment","slug":"/fallacious-comment","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Linguistic Antipattern"],"tags":["---"]}},{"title":"Fallacious Method Name","slug":"/fallacious-method-name","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell","Linguistic Antipattern"],"tags":["---"]}},{"title":"Afraid To Fail","slug":"/afraid-to-fail","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Alternative Classes with Different Interfaces","slug":"/alternative-classes-with-different-interfaces","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Base Class depends on Subclass","slug":"/base-class-depends-on-subclass","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Binary Operator in Name","slug":"/binary-operator-in-name","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Linguistic Smell"],"tags":["---"]}},{"title":"Boolean Blindness","slug":"/boolean-blindness","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Callback Hell","slug":"/callback-hell","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Combinatorial Explosion","slug":"/combinatorial-explosion","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Complicated Boolean Expression","slug":"/complicated-boolean-expression","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Complicated Regex Expression","slug":"/complicated-regex-expression","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Conditional Complexity","slug":"/conditional-complexity","categories":{"expanse":"Within","obstruction":["Object Oriented Abusers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Data Clump","slug":"/data-clump","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Dead Code","slug":"/dead-code","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Divergent Change","slug":"/divergent-change","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Dubious Abstraction","slug":"/dubious-abstraction","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Fate over Action","slug":"/fate-over-action","categories":{"expanse":"Between","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Feature Envy","slug":"/feature-envy","categories":{"expanse":"Between","obstruction":["Couplers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Flag Argument","slug":"/flag-argument","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Global Data","slug":"/global-data","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Hidden Dependencies","slug":"/hidden-dependencies","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Imperative Loops","slug":"/imperative-loops","categories":{"expanse":"Within","obstruction":["Functional Abusers"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inappropriate Static","slug":"/inappropriate-static","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Incomplete Library Class","slug":"/incomplete-library-class","categories":{"expanse":"Between","obstruction":["Other"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inconsistent Names","slug":"/inconsistent-names","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Inconsistent Style","slug":"/inconsistent-style","categories":{"expanse":"Between","obstruction":["Obfuscators"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Indecent Exposure","slug":"/indecent-exposure","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Insider Trading","slug":"/insider-trading","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Large Class","slug":"/large-class","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Architecture Smell","Code Smell","Design Smell"],"tags":["Unknown"]}},{"title":"Lazy Element","slug":"/lazy-element","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Long Method","slug":"/long-method","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Long Parameter List","slug":"/long-parameter-list","categories":{"expanse":"Within","obstruction":["Bloaters"],"occurrence":["Measured Smells"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell","Implementation Smell"],"tags":["---"]}},{"title":"Magic Number","slug":"/magic-number","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Antipattern","Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Message Chain","slug":"/message-chain","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Message Calls"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Middle Man","slug":"/middle-man","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Message Calls"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Mutable Data","slug":"/mutable-data","categories":{"expanse":"Between","obstruction":["Functional Abusers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Null Check","slug":"/null-check","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["Unknown"]}},{"title":"Obscured Intent","slug":"/obscured-intent","categories":{"expanse":"Between","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Oddball Solution","slug":"/oddball-solution","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Duplication"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Parallel Inheritance Hierarchies","slug":"/parallel-inheritance-hierarchies","categories":{"expanse":"Between","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Primitive Obsession","slug":"/primitive-obsession","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Refused Bequest","slug":"/refused-bequest","categories":{"expanse":"Between","obstruction":["Object Oriented Abusers"],"occurrence":["Interfaces"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Required Setup or Teardown Code","slug":"/required-setup-or-teardown-code","categories":{"expanse":"Between","obstruction":["Bloaters"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Shotgun Surgery","slug":"/shotgun-surgery","categories":{"expanse":"Between","obstruction":["Change Preventers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Side Effects","slug":"/side-effects","categories":{"expanse":"Within","obstruction":["Functional Abusers"],"occurrence":["Responsibility"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Special Case","slug":"/special-case","categories":{"expanse":"Within","obstruction":["Change Preventers"],"occurrence":["Conditional Logic"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Speculative Generality","slug":"/speculative-generality","categories":{"expanse":"Between","obstruction":["Dispensables"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Antipattern","Code Smell","Design Smell"],"tags":["---"]}},{"title":"Status Variable","slug":"/status-variable","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Unnecessary Complexity"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Temporary Field","slug":"/temporary-field","categories":{"expanse":"Within","obstruction":["Object Oriented Abusers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"Tramp Data","slug":"/tramp-data","categories":{"expanse":"Between","obstruction":["Data Dealers"],"occurrence":["Data"],"smell_hierarchies":["Code Smell","Design Smell"],"tags":["---"]}},{"title":"Type Embedded in Name","slug":"/type-embedded-in-name","categories":{"expanse":"Within","obstruction":["Couplers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell","Linguistic Smell"],"tags":["---"]}},{"title":"Uncommunicative Name","slug":"/uncommunicative-name","categories":{"expanse":"Within","obstruction":["Lexical Abusers"],"occurrence":["Names"],"smell_hierarchies":["Code Smell","Implementation Smell"],"tags":["---"]}},{"title":"Vertical Separation","slug":"/vertical-separation","categories":{"expanse":"Within","obstruction":["Obfuscators"],"occurrence":["Measured Smells"],"smell_hierarchies":["Code Smell"],"tags":["---"]}},{"title":"\"What\" Comment","slug":"/what-comment","categories":{"expanse":"Within","obstruction":["Dispensables"],"occurrence":["Names"],"smell_hierarchies":["Code Smell"],"tags":["---"]}}]}},
    "staticQueryHashes": []}